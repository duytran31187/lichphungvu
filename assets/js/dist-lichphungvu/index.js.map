{"version":3,"sources":["../src/lephucsinhlib.js","../src/index.ts","../src/utils.ts","../src/cacNgayLeNamPhungVu.ts"],"sourcesContent":["/*\r\n * Copyright (c) 2006 Ho Ngoc Duc. All Rights Reserved.\r\n * Astronomical algorithms from the book \"Astronomical Algorithms\" by Jean Meeus, 1998\r\n *\r\n * Permission to use, copy, modify, and redistribute this software and its\r\n * documentation for personal, non-commercial use is hereby granted provided that\r\n * this copyright notice and appropriate documentation appears in all copies.\r\n */\r\nvar PI = Math.PI;\r\n\r\n/* Discard the fractional part of a number, e.g., INT(3.2) = 3 */\r\nfunction INT(d) {\r\n\treturn Math.floor(d);\r\n}\r\n\r\n/* Compute the (integral) Julian day number of day dd/mm/yyyy, i.e., the number \r\n * of days between 1/1/4713 BC (Julian calendar) and dd/mm/yyyy. \r\n * Formula from http://www.tondering.dk/claus/calendar.html\r\n */\r\nfunction jdFromDate(dd, mm, yy) {\r\n\tvar a, y, m, jd;\r\n\ta = INT((14 - mm) / 12);\r\n\ty = yy+4800-a;\r\n\tm = mm+12*a-3;\r\n\tjd = dd + INT((153*m+2)/5) + 365*y + INT(y/4) - INT(y/100) + INT(y/400) - 32045;\r\n\tif (jd < 2299161) {\r\n\t\tjd = dd + INT((153*m+2)/5) + 365*y + INT(y/4) - 32083;\r\n\t}\r\n\treturn jd;\r\n}\r\n\r\n/* Convert a Julian day number to day/month/year. Parameter jd is an integer */\r\n\r\n/* Compute the time of the k-th new moon after the new moon of 1/1/1900 13:52 UCT \r\n * (measured as the number of days since 1/1/4713 BC noon UCT, e.g., 2451545.125 is 1/1/2000 15:00 UTC).\r\n * Returns a floating number, e.g., 2415079.9758617813 for k=2 or 2414961.935157746 for k=-2\r\n * Algorithm from: \"Astronomical Algorithms\" by Jean Meeus, 1998\r\n */\r\nfunction NewMoon(k) {\r\n\tvar T, T2, T3, dr, Jd1, M, Mpr, F, C1, deltat, JdNew;\r\n\tT = k/1236.85; // Time in Julian centuries from 1900 January 0.5\r\n\tT2 = T * T;\r\n\tT3 = T2 * T;\r\n\tdr = PI/180;\r\n\tJd1 = 2415020.75933 + 29.53058868*k + 0.0001178*T2 - 0.000000155*T3;\r\n\tJd1 = Jd1 + 0.00033*Math.sin((166.56 + 132.87*T - 0.009173*T2)*dr); // Mean new moon\r\n\tM = 359.2242 + 29.10535608*k - 0.0000333*T2 - 0.00000347*T3; // Sun's mean anomaly\r\n\tMpr = 306.0253 + 385.81691806*k + 0.0107306*T2 + 0.00001236*T3; // Moon's mean anomaly\r\n\tF = 21.2964 + 390.67050646*k - 0.0016528*T2 - 0.00000239*T3; // Moon's argument of latitude\r\n\tC1=(0.1734 - 0.000393*T)*Math.sin(M*dr) + 0.0021*Math.sin(2*dr*M);\r\n\tC1 = C1 - 0.4068*Math.sin(Mpr*dr) + 0.0161*Math.sin(dr*2*Mpr);\r\n\tC1 = C1 - 0.0004*Math.sin(dr*3*Mpr);\r\n\tC1 = C1 + 0.0104*Math.sin(dr*2*F) - 0.0051*Math.sin(dr*(M+Mpr));\r\n\tC1 = C1 - 0.0074*Math.sin(dr*(M-Mpr)) + 0.0004*Math.sin(dr*(2*F+M));\r\n\tC1 = C1 - 0.0004*Math.sin(dr*(2*F-M)) - 0.0006*Math.sin(dr*(2*F+Mpr));\r\n\tC1 = C1 + 0.0010*Math.sin(dr*(2*F-Mpr)) + 0.0005*Math.sin(dr*(2*Mpr+M));\r\n\tif (T < -11) {\r\n\t\tdeltat= 0.001 + 0.000839*T + 0.0002261*T2 - 0.00000845*T3 - 0.000000081*T*T3;\r\n\t} else {\r\n\t\tdeltat= -0.000278 + 0.000265*T + 0.000262*T2;\r\n\t};\r\n\tJdNew = Jd1 + C1 - deltat;\r\n\treturn JdNew;\r\n}\r\n\r\n/* Compute the longitude of the sun at any time. \r\n * Parameter: floating number jdn, the number of days since 1/1/4713 BC noon\r\n * Algorithm from: \"Astronomical Algorithms\" by Jean Meeus, 1998\r\n */\r\nfunction SunLongitude(jdn) {\r\n\tvar T, T2, dr, M, L0, DL, L;\r\n\tT = (jdn - 2451545.0 ) / 36525; // Time in Julian centuries from 2000-01-01 12:00:00 GMT\r\n\tT2 = T*T;\r\n\tdr = PI/180; // degree to radian\r\n\tM = 357.52910 + 35999.05030*T - 0.0001559*T2 - 0.00000048*T*T2; // mean anomaly, degree\r\n\tL0 = 280.46645 + 36000.76983*T + 0.0003032*T2; // mean longitude, degree\r\n\tDL = (1.914600 - 0.004817*T - 0.000014*T2)*Math.sin(dr*M);\r\n\tDL = DL + (0.019993 - 0.000101*T)*Math.sin(dr*2*M) + 0.000290*Math.sin(dr*3*M);\r\n\tL = L0 + DL; // true longitude, degree\r\n\tL = L*dr;\r\n\tL = L - PI*2*(INT(L/(PI*2))); // Normalize to (0, 2*PI)\r\n\treturn L;\r\n}\r\n\r\n/* Compute sun position at midnight of the day with the given Julian day number. \r\n * The time zone if the time difference between local time and UTC: 7.0 for UTC+7:00.\r\n * The function returns a number between 0 and 11. \r\n * From the day after March equinox and the 1st major term after March equinox, 0 is returned. \r\n * After that, return 1, 2, 3 ... \r\n */\r\nfunction getSunLongitude(dayNumber, timeZone) {\r\n\treturn INT(SunLongitude(dayNumber - 0.5 - timeZone/24)/PI*6);\r\n}\r\n\r\n/* Compute the day of the k-th new moon in the given time zone.\r\n * The time zone if the time difference between local time and UTC: 7.0 for UTC+7:00\r\n */\r\nfunction getNewMoonDay(k, timeZone) {\r\n\treturn INT(NewMoon(k) + 0.5 + timeZone/24);\r\n}\r\n\r\n/* Find the day that starts the luner month 11 of the given year for the given time zone */\r\nfunction getLunarMonth11(yy, timeZone) {\r\n\tvar k, off, nm, sunLong;\r\n\t//off = jdFromDate(31, 12, yy) - 2415021.076998695;\r\n\toff = jdFromDate(31, 12, yy) - 2415021;\r\n\tk = INT(off / 29.530588853);\r\n\tnm = getNewMoonDay(k, timeZone);\r\n\tsunLong = getSunLongitude(nm, timeZone); // sun longitude at local midnight\r\n\tif (sunLong >= 9) {\r\n\t\tnm = getNewMoonDay(k-1, timeZone);\r\n\t}\r\n\treturn nm;\r\n}\r\n\r\n/* Find the index of the leap month after the month starting on the day a11. */\r\nfunction getLeapMonthOffset(a11, timeZone) {\r\n\tvar k, last, arc, i;\r\n\tk = INT((a11 - 2415021.076998695) / 29.530588853 + 0.5);\r\n\tlast = 0;\r\n\ti = 1; // We start with the month following lunar month 11\r\n\tarc = getSunLongitude(getNewMoonDay(k+i, timeZone), timeZone);\r\n\tdo {\r\n\t\tlast = arc;\r\n\t\ti++;\r\n\t\tarc = getSunLongitude(getNewMoonDay(k+i, timeZone), timeZone);\r\n\t} while (arc != last && i < 14);\r\n\treturn i-1;\r\n}\r\n\r\n/* Comvert solar date dd/mm/yyyy to the corresponding lunar date */\r\nfunction convertSolar2Lunar(dd, mm, yy, timeZone) {\r\n\tvar k, dayNumber, monthStart, a11, b11, lunarDay, lunarMonth, lunarYear, lunarLeap;\r\n\tdayNumber = jdFromDate(dd, mm, yy);\r\n\tk = INT((dayNumber - 2415021.076998695) / 29.530588853);\r\n\tmonthStart = getNewMoonDay(k+1, timeZone);\r\n\tif (monthStart > dayNumber) {\r\n\t\tmonthStart = getNewMoonDay(k, timeZone);\r\n\t}\r\n\t//alert(dayNumber+\" -> \"+monthStart);\r\n\ta11 = getLunarMonth11(yy, timeZone);\r\n\tb11 = a11;\r\n\tif (a11 >= monthStart) {\r\n\t\tlunarYear = yy;\r\n\t\ta11 = getLunarMonth11(yy-1, timeZone);\r\n\t} else {\r\n\t\tlunarYear = yy+1;\r\n\t\tb11 = getLunarMonth11(yy+1, timeZone);\r\n\t}\r\n\tlunarDay = dayNumber-monthStart+1;\r\n\tconst diff = INT((monthStart - a11)/29);\r\n\tlunarLeap = 0;\r\n\tlunarMonth = diff+11;\r\n\tif (b11 - a11 > 365) {\r\n\t\tconst leapMonthDiff = getLeapMonthOffset(a11, timeZone);\r\n\t\tif (diff >= leapMonthDiff) {\r\n\t\t\tlunarMonth = diff + 10;\r\n\t\t\tif (diff == leapMonthDiff) {\r\n\t\t\t\tlunarLeap = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (lunarMonth > 12) {\r\n\t\tlunarMonth = lunarMonth - 12;\r\n\t}\r\n\tif (lunarMonth >= 11 && diff < 4) {\r\n\t\tlunarYear -= 1;\r\n\t}\r\n\treturn new Array(lunarDay, lunarMonth, lunarYear, lunarLeap);\r\n}\r\n// end lib\r\nmodule.exports = {\r\n    convertSolar2Lunar\r\n}","import { NamPhungVu } from \"./commonData\";\r\nimport { tinhLeChuaThanhThanHienxuong, tinh4TuanMuaVong, tinhNamABC, tinhLeChuaHienLinh, tinhThuTuLeTro, tinhNgayPhucSinh, tinhLeThanhGia, tinhLeChuaChiuPhepRua, tinhLeChuaKiToVua, tinhChuaNhatThuongNienDauTienSauLeChuaThanhThanHienXuong, firstSundayOfLent, secondSundayOfLent, thirdSundayOfLent, palmSunday, fifthSundayOfLent, fourthSundayOfLent, calculateTheAscentionOfTheLord, tinhLeChuaBaNgoi, tinhLeMinhMauThanhChua, tinhLeThanhTamChuaGieSu} from \"./cacNgayLeNamPhungVu\";\r\nimport { addDate, cloneDate, getChristmasDay, newDate, printDate } from \"./utils\";\r\nexport const nameOfDays = {\r\n    year: 'year( Năm)',\r\n    yearABC: 'A|B|C (năm A|B|C)',\r\n    oddEven: 'Odd|Even (Năm chẵn lẻ)',\r\n    theEpiphanyOfTheLord: 'The Epiphany of the Lord (Lễ Chúa Hiển Linh)',\r\n    leChuaChiuPhepRua: 'Lễ Chúa chịu phép rửa',\r\n    ashWed: 'Ash Wednesday (Thứ tư lễ tro)',\r\n    firstSundayOfLent: 'First Sunday of Lent (Chúa nhật thứ nhất mùa chay)',\r\n    secondSundayOfLent: 'Second Sunday of Lent (Chúa nhật thứ 2 mùa chay)',\r\n    thirdSundayOfLent: 'Third Sunday of Lent (Chúa nhật thứ 3 mùa chay)',\r\n    fourthSundayOfLent: 'Fourth Sunday of Lent (Chúa nhật thứ 4 mùa chay)',\r\n    fifthSundayOfLent: 'Fifth Sunday of Lent (Chúa nhật thứ 5 mùa chay)',\r\n    palmSunday: 'Palm Sunday (Lễ Lá)',\r\n    easterSunday: 'Easter Sunda (Phục sinh)',\r\n    secondSundayOfEaster: 'Second Sunday of Easter (Chúa nhật thứ 2 phục sinh)',\r\n    thirdSundayOfEaster: 'Third Sunday of Easter (Chúa nhật thứ 3 phục sinh)',\r\n    fourthSundayOfEaster: 'Fourth Sunday of Easter (Chúa nhật thứ 4 phục sinh)',\r\n    fifthSundayOfEaster: 'Fifth Sunday of Easter (Chúa nhật thứ 5 phục sinh)',\r\n    sixthSundayOfEaster: 'Sixth Sunday of Easter (Chúa nhật thứ 6 phục sinh)',\r\n    theAscentionOfTheLord: 'The Ascention of the Lord (Lễ Chúa Lên Trời)',\r\n    pentecostSunday: 'Pentecost Sunday (Lễ Chúa Thánh Thần hiện xuống)',\r\n    firstSundayOfAdvent: 'First Sunday of Advent (Chúa nhật thứ nhất mùa vọng)',\r\n    secondSundayOfAdvent: 'Second Sunday of Advent (Chúa nhật thứ 2 mùa vọng)',\r\n    thirdSundayOfAdvent: 'Third Sunday of Advent (Chúa nhật thứ 3 mùa vọng)',\r\n    fourthSundayOfAdvent: 'Fourth Sunday of Advent (Chúa nhật thứ tư mùa vọng)',\r\n    christmas: 'Christmas (Giáng sinh)',\r\n    leThanhGia: 'Lễ Thánh Gia',\r\n    chuaKitoVua: 'Lễ Chúa KiTo Vua',\r\n    firstOrdinarySundayAfterPentecostSunday: 'Chua Nhat Thuong Nien sau Le Chua Thanh than hien xuong',\r\n    leDucMeChuaTroi: 'Thánh Ma-ri-a, Ðức Mẹ Chúa Trời',\r\n    dangchuaGiesuTrongDenThanh: 'Dâng Chúa Giê-su Trong Đền Thánh',\r\n    leChuaBaNgoi: 'Lễ Chúa Ba Ngôi',\r\n    leMinhMauThanhChua: 'Lễ Mình Máu Thánh Chúa',\r\n    leThanhTamChuaGieSu: 'Lễ Thánh Tâm Chúa Giê Su',\r\n};\r\nexport function tinhNamPhungVu(y: number): NamPhungVu | false {\r\n    const tuanmuaVong = tinh4TuanMuaVong(y);\r\n    const easter = tinhNgayPhucSinh(y);\r\n    if (!(easter instanceof Date)) { // istanbul ignore next\r\n        return false;\r\n    }\r\n    const ashWednesday = tinhThuTuLeTro(easter);\r\n    const chuaHienLinh = tinhLeChuaHienLinh(y);\r\n    const leChuaKiToVua = tinhLeChuaKiToVua(tuanmuaVong.week1);\r\n    const pentecostSunday = tinhLeChuaThanhThanHienxuong(easter);\r\n    const leChuaBaNgoi = tinhLeChuaBaNgoi(pentecostSunday);\r\n    const leMinhMauThanhChua = tinhLeMinhMauThanhChua(leChuaBaNgoi);\r\n    const leThanhTamChuaGieSu = tinhLeThanhTamChuaGieSu(leMinhMauThanhChua);\r\n    const chuaNhatThuongNienDauTienSauLeChuaThanhThanHienXuong = tinhChuaNhatThuongNienDauTienSauLeChuaThanhThanHienXuong(\r\n        leChuaKiToVua,\r\n        pentecostSunday\r\n    );\r\n    const leChuaChiuPhepRua = tinhLeChuaChiuPhepRua(y);\r\n    if (!(leChuaChiuPhepRua instanceof Date)) { // istanbul ignore next\r\n        return false;\r\n    }\r\n    return {\r\n        year: y,\r\n        yearABC: tinhNamABC(y),\r\n        oddEven: y % 2 == 0 ? 'Even ( Năm chẵn)' : 'Odd (Năm lẻ)',\r\n        leDucMeChuaTroi: newDate(y, 1,1),\r\n        dangchuaGiesuTrongDenThanh: newDate(y,2,2),\r\n        theEpiphanyOfTheLord: chuaHienLinh,\r\n        firstOrdinarySundayAfterPentecostSunday: chuaNhatThuongNienDauTienSauLeChuaThanhThanHienXuong,\r\n        leChuaChiuPhepRua: leChuaChiuPhepRua,\r\n        ashWed: ashWednesday,\r\n        firstSundayOfLent: firstSundayOfLent(ashWednesday),\r\n        secondSundayOfLent: secondSundayOfLent(ashWednesday),\r\n        thirdSundayOfLent: thirdSundayOfLent(ashWednesday),\r\n        fourthSundayOfLent: fourthSundayOfLent(ashWednesday),\r\n        fifthSundayOfLent: fifthSundayOfLent(ashWednesday),\r\n        palmSunday: palmSunday(ashWednesday),\r\n        easterSunday: easter,\r\n        secondSundayOfEaster: addDate(easter, 7),\r\n        thirdSundayOfEaster: addDate(easter, 14),\r\n        fourthSundayOfEaster: addDate(easter, 21),\r\n        fifthSundayOfEaster: addDate(easter, 28),\r\n        sixthSundayOfEaster: addDate(easter, 35),\r\n        theAscentionOfTheLord: calculateTheAscentionOfTheLord(easter),\r\n        pentecostSunday: pentecostSunday,\r\n        leChuaBaNgoi: leChuaBaNgoi,\r\n        leMinhMauThanhChua: leMinhMauThanhChua,\r\n        leThanhTamChuaGieSu: leThanhTamChuaGieSu,\r\n        chuaKitoVua: leChuaKiToVua,\r\n        firstSundayOfAdvent: tuanmuaVong.week1,\r\n        secondSundayOfAdvent: tuanmuaVong.week2,\r\n        thirdSundayOfAdvent: tuanmuaVong.week3,\r\n        fourthSundayOfAdvent: tuanmuaVong.week4,\r\n        christmas: getChristmasDay(y),\r\n        leThanhGia: tinhLeThanhGia(y),\r\n    }\r\n}\r\n// const namphungVuIns = tinhNamPhungVu(2025);\r\n// console.log(namphungVuIns);\r\n// for( let key in namphungVuIns) \r\n// {\r\n//     const val = namphungVuIns[key] instanceof Date ? namphungVuIns[key].toDateString() : namphungVuIns[key];\r\n//     console.log(`${nameOfDays[key]}: ${val}`);\r\n// }","export function cloneDate(d: Date): Date {\r\n\treturn new Date(d);\r\n}\r\nexport function printDate(d: Date): string {\r\n    let day: string | number;\r\n    let month: string | number;\r\n    day = d.getDate();\r\n    month = d.getMonth() + 1;\r\n    let year = d.getFullYear();\r\n    \r\n    day = day < 10 ? '0'+day : day;\r\n    month = month < 10 ? '0' + month : month;\r\n    return `${day}-${month}-${year}`;\r\n}\r\nexport function newDate(year: number, month: number, day:number): Date {\r\n    return new Date(year + '-' + month + '-' + day);\r\n}\r\nexport function addDate(currentDate: Date, numOfDate: number) {\r\n    const newDate = cloneDate(currentDate);\r\n    newDate.setDate(newDate.getDate() + numOfDate);\r\n    return newDate;\r\n};\r\nexport function getChristmasDay(year: number) {\r\n    return newDate(year, 12, 25);\r\n}\r\nexport function timNgayTrongTuanSauNgay(d: Date, dayOfWeek: number): Date | null | undefined {\r\n    // dayOfWeek: 0: sun, 6: Saturday\r\n    let count = 1;\r\n    let resultDay: Date;\r\n    let breakTheLoop = false;\r\n    do {\r\n        const testDate = addDate(d, count);\r\n        if (testDate.getDay() == dayOfWeek) {\r\n            breakTheLoop = true;\r\n            resultDay = cloneDate(testDate);\r\n        }\r\n        count++;\r\n        if (count > 7) {\r\n            breakTheLoop = true\r\n        }\r\n    } while(!breakTheLoop)\r\n    if(!resultDay!) {\r\n        console.log(`cant find timNgayTrongTuanSauNgay for d ${d.toDateString()} for ${dayOfWeek}`);\r\n        return null;\r\n    }    \r\n    return resultDay;    \r\n}\r\nexport const timChuaNhatGanNhatTuNgay = (d: Date): Date | false => {\r\n    // chua nhat gan nhat sau ngay d, có thể là ngày d => do do subDay 1\r\n    // let sundayFound = false;\r\n    d.setDate(d.getDate() - 1);\r\n    const foundDate = timNgayTrongTuanSauNgay(d, 0);\r\n    if (foundDate instanceof Date) {\r\n        return foundDate;\r\n    }\r\n    // istanbul ignore next\r\n    return false;\r\n}","const { convertSolar2Lunar } = require('./lephucsinhlib');\r\n\r\nimport { cloneDate, getChristmasDay, newDate, timNgayTrongTuanSauNgay } from './utils';\r\nimport { simpleDate, MuaphungSinh } from './commonData';\r\nimport { addDate, timChuaNhatGanNhatTuNgay } from './utils';\r\n// chuyen doi ngay duong sang ngay âm\r\n\r\nexport const tinhngayramsau21thang3 = (y: number): simpleDate => {\r\n    // tim ngay rằm\r\n    let ngayRamFound = false;\r\n    let count = 0;\r\n\r\n    let dateFrom21: number = 21;\r\n    let month: number = 3;\r\n    do {\r\n        const ngayAm = convertSolar2Lunar(\r\n            dateFrom21,\r\n            month,\r\n            y,\r\n            7 // UTC+7\r\n        );\r\n        const lunarDay = ngayAm[0];\r\n        if (lunarDay === 16) { // month can be different\r\n            ngayRamFound = true;\r\n        }\r\n        count++;\r\n        dateFrom21++;\r\n        if (dateFrom21 == 32) { // qua thang 4\r\n            dateFrom21 = 1;\r\n            month = 4;\r\n        }\r\n\r\n    } while (!ngayRamFound)\r\n    return {\r\n        year: y,\r\n        month: month,\r\n        day: dateFrom21\r\n    };\r\n};\r\nexport function tinhThuTuLeTro(ngayLePhucSinh: Date) {\r\n    const d = cloneDate(ngayLePhucSinh);\r\n    d.setDate(d.getDate() - 46);\r\n    return d;\r\n}\r\nexport const tinhNgayPhucSinh = (year: number): Date | false => {// tim ngay chua nhat gan nhat SAU ngay ram\r\n    const simpleDateParam: simpleDate = tinhngayramsau21thang3(year);\r\n    let closestSunday = new Date(simpleDateParam.year + '-' + simpleDateParam.month + '-' + simpleDateParam.day);\r\n    const foundDate = timChuaNhatGanNhatTuNgay(closestSunday);\r\n    if (foundDate instanceof Date) {\r\n        return foundDate;\r\n    }\r\n    // istanbul ignore next\r\n    return false;\r\n}\r\nexport function tinhLeChuaHienLinh(y: number): Date {\r\n    // Lễ Hiển Linh: vào ngày 6/1 - nhưng thường chuyển vào ngày CN gần ngày 6/1 nhất\r\n    const ngayLeHienLinh = new Date(y + '-01-06');\r\n    switch (ngayLeHienLinh.getDay()) {\r\n        case 1:// t2\r\n            return new Date(y + '-01-05'); // -1\r\n        case 2:// t3\r\n            return new Date(y + '-01-04'); // -2\r\n        case 3:// t4\r\n            return new Date(y + '-01-03'); // -3\r\n        case 4:// t5\r\n            return new Date(y + '-01-02'); // +3 => base on rule 2022\r\n        case 5:// t5\r\n            return new Date(y + '-01-8'); // +2\r\n        case 6:// t7\r\n            return new Date(y + '-01-7');  // +1  \r\n        default: // istanbul ignore next\r\n            return ngayLeHienLinh; // chu nhat\r\n    }\r\n}\r\nexport function tinhLeThanhGia(y: number): Date {\r\n    // the Octave (Bát Nhật Giáng Sinh) 25-1/1\r\n    // Lễ Thánh Gia: chọn ngày CN trong tuần Bát Nhật Giáng Sinh, nếu không có ngày CN, thì chọn ngày 30/12\r\n    const christMas = getChristmasDay(y);\r\n    let count = 1;\r\n    let breakTheLoop = false;\r\n    let foundDate = new Date(y + '-12-30');\r\n    do {\r\n        let octaveDay = addDate(christMas, count); // ngay thu 2 tuan bat nhat la 26, ngay 7: 1/1 => ignore\r\n        if (octaveDay.getDay() == 0) {\r\n            breakTheLoop = true;\r\n            foundDate = octaveDay;\r\n        }\r\n        count++;\r\n        if (count > 6) { // khoong tinh ngay 1/1\r\n            breakTheLoop = true\r\n        }\r\n    } while (!breakTheLoop)\r\n    return foundDate;\r\n}\r\nexport function tinhLeChuaChiuPhepRua(y: number): Date | false {\r\n    // Lễ Chúa chịu phép rửa: thường vào ngày CN tiếp theo CN Hiển Linh, trừ trường hợp CN hiển Linh rơi vào 2 ngày 7/1 và 8/1 thì lễ Chúa Chịu Phép rửa chọn ngay ngày thứ 2 sau đó\r\n    const leHienLinh = tinhLeChuaHienLinh(y);\r\n    const day7 = new Date(y + '-1-7');\r\n    const day8 = new Date(y + '-1-8');\r\n    let ngayLe: any;\r\n    if (leHienLinh.getTime() == day7.getTime()) {\r\n        // chon ngay t2 ke tiep\r\n        ngayLe = timNgayTrongTuanSauNgay(day7, 1);\r\n    } else if (leHienLinh.getTime() == day8.getTime()) {\r\n        // chon ngay t2 ke tiep\r\n        ngayLe = timNgayTrongTuanSauNgay(day8, 1);\r\n    } else {\r\n        ngayLe = timNgayTrongTuanSauNgay(leHienLinh, 0);\r\n    }\r\n    if(ngayLe instanceof Date) {\r\n        return ngayLe;\r\n    } else { // istanbul ignore next\r\n        return false;\r\n    }\r\n}\r\nexport const tinhLeChuaKiToVua = (chuaNhatThuNhatMuaVong: Date): Date => {\r\n    //Lễ Kitô Vua là Chúa Nhật gần với Chúa Nhật I Mùa Vọng\r\n    let tuan = cloneDate(chuaNhatThuNhatMuaVong);\r\n    tuan.setDate(tuan.getDate() - 7);\r\n    return tuan;\r\n}\r\nexport const tinhLeChuaThanhThanHienxuong = (easter: Date): Date => {\r\n    const d = cloneDate(easter);\r\n    return addDate(d, 49);\r\n}\r\nexport const tinhLeChuaBaNgoi = (leChuaThanhThanHienXuong: Date): Date => {\r\n    const d = cloneDate(leChuaThanhThanHienXuong);\r\n    return addDate(d, 7);\r\n}\r\nexport const tinhLeMinhMauThanhChua = (tinhLeChuaBaNgoi: Date): Date => {\r\n    const d = cloneDate(tinhLeChuaBaNgoi);\r\n    return addDate(d, 7);\r\n}\r\nexport const tinhLeThanhTamChuaGieSu = (tinhLeMinhMauThanhChua: Date): Date => {\r\n    const d = cloneDate(tinhLeMinhMauThanhChua);\r\n    return addDate(d, 7);\r\n}\r\n\r\nexport const tinhChuaNhatThuongNienDauTienSauLeChuaThanhThanHienXuong = (leKiToVua: Date, leChuatthienxuong: Date): number => {\r\n    // leKiToVua la tuan 34\r\n    let count = 33;\r\n    let found = false;\r\n    const chuaNhatThuongNienDauTienMua2 = cloneDate(leChuatthienxuong);\r\n    chuaNhatThuongNienDauTienMua2.setDate(chuaNhatThuongNienDauTienMua2.getDate() + 7);\r\n    if (\r\n        leChuatthienxuong.getDay() != 0\r\n        || leKiToVua.getDay() != 0\r\n    ) {\r\n        console.error('invalid params');\r\n        return 100;\r\n    }\r\n    do {\r\n        let sunday34 = cloneDate(leKiToVua); // la tuan 34\r\n        sunday34.setDate(sunday34.getDate() - ((34 - count) * 7));\r\n        count--;\r\n        if (sunday34.toDateString() == chuaNhatThuongNienDauTienMua2.toDateString()) {\r\n            found = true;\r\n            count++;\r\n        }\r\n    } while (!found);\r\n    return count;\r\n}\r\n\r\nexport function tinhNamABC(y: number): string {\r\n    let yearStr = y.toString();\r\n    let yearNums = Array.from(yearStr);\r\n    let countNum = 0;\r\n    let year: string;\r\n    yearNums.forEach((element) => {\r\n        countNum += parseInt(<string>element);\r\n    });\r\n    switch (countNum % 3) {\r\n        case 1:\r\n            year = 'A';\r\n            break;\r\n        case 2:\r\n            year = 'B';\r\n            break;\r\n        default:\r\n            year = 'C';\r\n    }\r\n    return year;\r\n}\r\nexport function tinh4TuanMuaVong(y: number): MuaphungSinh {\r\n    let chrismastDate = getChristmasDay(y);\r\n    let sundayFound = false;\r\n    let count = 0;\r\n    let finalResult: MuaphungSinh;\r\n    do {\r\n        let closestSunday_1 = chrismastDate;\r\n        closestSunday_1.setDate(chrismastDate.getDate() - 1);\r\n        if (closestSunday_1.getDay() === 0) { //sunday\r\n            let sunday4 = new Date(closestSunday_1.getTime());\r\n            let sunday3 = new Date(sunday4.getTime());\r\n            sunday3.setDate(sunday3.getDate() - (7));\r\n            let sunday2 = new Date(sunday3.getTime());\r\n            sunday2.setDate(sunday2.getDate() - (7));\r\n            let sunday1 = new Date(sunday2.getTime());\r\n            sunday1.setDate(sunday2.getDate() - (7));\r\n            sundayFound = true;\r\n            finalResult = {\r\n                week1: sunday1,\r\n                week2: sunday2,\r\n                week3: sunday3,\r\n                week4: sunday4\r\n            };\r\n            break;\r\n        }\r\n        count++;\r\n    } while (!sundayFound);\r\n    return finalResult!;\r\n};\r\nexport const firstSundayOfLent = (ashWednesday: Date): Date => {\r\n    return  addDate(ashWednesday, 4);\r\n}\r\nexport const secondSundayOfLent = (ashWednesday: Date): Date => {\r\n    return  addDate(ashWednesday, 11);\r\n}\r\nexport const thirdSundayOfLent = (ashWednesday: Date): Date => {\r\n    return  addDate(ashWednesday, 18);\r\n}\r\nexport const fourthSundayOfLent = (ashWednesday: Date): Date => {\r\n    return  addDate(ashWednesday, 25);\r\n}\r\nexport const fifthSundayOfLent = (ashWednesday: Date): Date => {\r\n    return  addDate(ashWednesday, 32);\r\n}\r\nexport const calculateTheAscentionOfTheLord = (easter: Date): Date => {\r\n    return  addDate(easter, 42);\r\n}\r\nexport const palmSunday = (ashWednesday: Date): Date => {\r\n    return  addDate(ashWednesday, 39);\r\n}"],"mappings":"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","names":["exports","module","convertSolar2Lunar","newDate","tinhLeChuaBaNgoi","tinhLeMinhMauThanhChua"]}